package com.jainyJobPortal.Controller;

import java.util.Optional;

import org.springframework.security.authentication.AnonymousAuthenticationToken;
import org.springframework.security.core.Authentication;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;

import com.jainyJobPortal.Services.JobPostActivityService;
import com.jainyJobPortal.Services.JobSeekerProfileService;
import com.jainyJobPortal.Services.JobSeekerSaveService;
import com.jainyJobPortal.Services.UsersService;
import com.jainyJobPortal.entity.JobSeekerProfile;
import com.jainyJobPortal.entity.JobSeekerSave;
import com.jainyJobPortal.entity.Users;

@Controller
public class JobSeekerSaveController {
    
	private final UsersService usersService;
	private final JobSeekerProfileService jobSeekerProfileService;
	private final JobPostActivityService jobPostActivityService;
	private final JobSeekerSaveService jobSeekerSaveService;
	public JobSeekerSaveController(UsersService usersService, JobSeekerProfileService jobSeekerProfileService,
			JobPostActivityService jobPostActivityService, JobSeekerSaveService jobSeekerSaveService) {
		super();
		this.usersService = usersService;
		this.jobSeekerProfileService = jobSeekerProfileService;
		this.jobPostActivityService = jobPostActivityService;
		this.jobSeekerSaveService = jobSeekerSaveService;
	}
	@PostMapping("job-details/save/{id}")
	public String save(@PathVariable("id") int id, JobSeekerSave jobSeekerSave) {
		
		Authentication authentication = SecurityContextHolder.getContext().getAuthentication();
		if(!(authentication instanceof AnonymousAuthenticationToken)) {
			String currentUserName = authentication.getName();
			Users user = usersService.findByEmail(currentUserName);
			Optional<JobSeekerProfile> seekerProfile = jobSeekerProfileService.getOne(user.getUserId());
		}
	}
}
